(function(){var g="cmp";
var h="formText";
var e="form-text";
var d={self:"[data-"+g+'-is="'+h+'"]'};
var c={constraintMessage:{},requiredMessage:{}};
function b(l){var n=l.dataset;
var j=[];
var o=h;
o=o.charAt(0).toUpperCase()+o.slice(1);
var i=["is","hook"+o];
for(var k in n){if(n.hasOwnProperty(k)){var m=n[k];
if(k.indexOf(g)===0){k=k.slice(g.length);
k=k.charAt(0).toLowerCase()+k.substring(1);
if(i.indexOf(k)===-1){j[k]=m
}}}}return j
}function a(i){if(i.element){i.element.removeAttribute("data-"+g+"-is")
}this._cacheElements(i.element);
this._setupProperties(i.options);
this._elements.input.addEventListener("invalid",this._onInvalid.bind(this));
this._elements.input.addEventListener("input",this._onInput.bind(this))
}a.prototype._onInvalid=function(i){i.target.setCustomValidity("");
if(i.target.validity.typeMismatch){if(this._properties.constraintMessage){i.target.setCustomValidity(this._properties.constraintMessage)
}}else{if(i.target.validity.valueMissing){if(this._properties.requiredMessage){i.target.setCustomValidity(this._properties.requiredMessage)
}}}};
a.prototype._onInput=function(i){i.target.setCustomValidity("")
};
a.prototype._cacheElements=function(o){this._elements={};
this._elements.self=o;
var j=this._elements.self.querySelectorAll("[data-"+g+"-hook-"+e+"]");
for(var l=0;
l<j.length;
l++){var m=j[l];
var n=h;
n=n.charAt(0).toUpperCase()+n.slice(1);
var k=m.dataset[g+"Hook"+n];
this._elements[k]=m
}};
a.prototype._setupProperties=function(i){this._properties={};
for(var j in c){if(c.hasOwnProperty(j)){var k=c[j];
if(i&&i[j]!=null){if(k&&typeof k.transform==="function"){this._properties[j]=k.transform(i[j])
}else{this._properties[j]=i[j]
}}else{this._properties[j]=c[j]["default"]
}}}};
function f(){var n=document.querySelectorAll(d.self);
for(var l=0;
l<n.length;
l++){new a({element:n[l],options:b(n[l])})
}var m=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;
var j=document.querySelector("body");
var k=new m(function(i){i.forEach(function(o){var p=[].slice.call(o.addedNodes);
if(p.length>0){p.forEach(function(q){if(q.querySelectorAll){var r=[].slice.call(q.querySelectorAll(d.self));
r.forEach(function(s){new a({element:s,options:b(s)})
})
}})
}})
});
k.observe(j,{subtree:true,childList:true,characterData:true})
}if(document.readyState!=="loading"){f()
}else{document.addEventListener("DOMContentLoaded",f)
}})();